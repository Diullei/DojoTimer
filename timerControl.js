// Generated by CoffeeScript 1.3.3
(function() {
  var TimerControl, control, proxy;

  proxy = function(fn, $this) {
    return function() {
      return fn.apply($this, arguments);
    };
  };

  TimerControl = (function() {

    function TimerControl() {
      this.currentsec = 59;
      this.currentmin = 5;
      this.currentmil = 9;
      this.strsec = "00";
      this.strmin = "00";
      this.strmil = "00";
      document.getElementById('reset').onclick = proxy(this.reset, this);
    }

    TimerControl.prototype.start = function() {
      this.currentmil -= 1;
      if (this.currentmil === -1) {
        this.currentmil = 9;
        this.currentsec -= 1;
      }
      if (this.currentsec === -1) {
        this.currentsec = 59;
        this.currentmin -= 1;
      }
      this.strsec = "" + this.currentsec;
      this.strmin = "" + this.currentmin;
      this.strmil = "" + this.currentmil;
      if (this.strsec.length !== 2) {
        this.strsec = "0" + this.currentsec;
      }
      if (this.strmin.length !== 2) {
        this.strmin = "0" + this.currentmin;
      }
      document.getElementById('seconds').innerHTML = this.strsec;
      document.getElementById('minutes').innerHTML = this.strmin;
      document.getElementById('milsecs').innerHTML = "0" + this.strmil;
      if (this.currentsec === 0 && this.currentmin === 0 && this.currentmil === 0) {
        chrome.app.window.focus();
        return;
      }
      setTimeout(proxy(this.start, this), 100);
      return null;
    };

    TimerControl.prototype.reset = function() {
      this.currentsec = 59;
      this.currentmin = 5;
      this.currentmil = 9;
      this.strsec = "00";
      this.strmin = "00";
      this.strmil = "00";
      setTimeout(proxy(this.start, this), 100);
      return null;
    };

    return TimerControl;

  })();

  control = new TimerControl;

  control.start();

}).call(this);
